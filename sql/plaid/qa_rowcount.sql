WITH params AS (
  SELECT
    '{{DB}}' AS customer_db,
    '{{SCHEMA}}' AS qa_schema
),
results AS (
    SELECT 'MEDICAL_EVENTS' AS table_name, 'new' AS version,
           COUNT(*) AS row_count, COUNT(DISTINCT PATIENT_ID) AS patient_count
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.MEDICAL_EVENTS_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'MEDICAL_EVENTS', 'previous', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.MEDICAL_EVENTS_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PATIENT_DEMOGRAPHICS', 'new', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_DEMOGRAPHICS_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PATIENT_DEMOGRAPHICS', 'previous', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_DEMOGRAPHICS_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PATIENT_ENROLLMENT', 'new', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_ENROLLMENT_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PATIENT_ENROLLMENT', 'previous', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_ENROLLMENT_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PATIENT_GEOGRAPHY', 'new', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_GEOGRAPHY_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PATIENT_GEOGRAPHY', 'previous', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PATIENT_GEOGRAPHY_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PHARMACY_EVENTS', 'new', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PHARMACY_EVENTS_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PHARMACY_EVENTS', 'previous', COUNT(*), COUNT(DISTINCT PATIENT_ID)
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PHARMACY_EVENTS_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PLANS', 'new', COUNT(*), NULL
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PLANS_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PLANS', 'previous', COUNT(*), NULL
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PLANS_{{LATEST_SUFFIX}}')

    UNION ALL
    SELECT 'PROVIDERS', 'new', COUNT(*), NULL
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PROVIDERS_{{REVIEW_SUFFIX}}')
    UNION ALL
    SELECT 'PROVIDERS', 'previous', COUNT(*), NULL
    FROM IDENTIFIER('{{DB}}.{{SCHEMA}}.PROVIDERS_{{LATEST_SUFFIX}}')
)
SELECT
    table_name,
    version,
    row_count,
    row_count - LEAD(row_count) OVER (PARTITION BY table_name ORDER BY version ASC) AS row_delta,
    ROUND(row_delta / LEAD(row_count) OVER (PARTITION BY table_name ORDER BY version ASC) * 100, 2) AS row_delta_pct,
    patient_count,
    patient_count - LEAD(patient_count) OVER (PARTITION BY table_name ORDER BY version ASC) AS patient_delta,
    ROUND(patient_delta / LEAD(patient_count) OVER (PARTITION BY table_name ORDER BY version ASC) * 100, 2) AS patient_delta_pct
FROM results
ORDER BY table_name, version;
